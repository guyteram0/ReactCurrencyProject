{"version":3,"sources":["components/Exchange.js","App.js","serviceWorker.js","index.js"],"names":["Exchange","props","Start","Start1","state","From","To","HowMuch","answer","Usd","alert","Euro","View","setState","flag","X","X1","index","Show","view","map","e","className","style","backgroundColor","onClick","Ils","placeholder","onChange","v","target","value","this","Component","App","Start2","f","t","h","a","Answer","X2","i","del","filter","Upd2","r","Table","type","rate","to","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.090bdc68.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\nexport default class Exchange extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             From:'',\r\n             To:'',\r\n             HowMuch:'',\r\n             Usd:'3.4',\r\n             Euro:'4.1',\r\n             Ils:'1',\r\n             flag:false,\r\n             answer:'',\r\n             index:props.index\r\n        }\r\n    }\r\n    Start=()=>{\r\n        this.props.Start1(this.state.From,this.state.To,this.state.HowMuch,this.state.answer)\r\n        if (this.state.From == 'USD' && this.state.To == 'ILS') {\r\n            var answer = this.state.Usd * this.state.HowMuch\r\n            alert(answer)\r\n        }\r\n        else if (this.state.From == 'ILS' && this.state.To == 'USD') {\r\n            let answer = this.state.HowMuch / this.state.Usd\r\n            alert(answer)\r\n        }\r\n        else if (this.state.From == 'EURO' && this.state.To == 'ILS') {\r\n            let answer = this.state.HowMuch * this.state.Euro\r\n            alert(answer)\r\n        }\r\n        else if (this.state.From == 'ILS' && this.state.To == 'EURO') {\r\n            var answer = this.state.HowMuch / this.state.Euro\r\n            alert(answer)\r\n        }\r\n    }\r\n    View=()=>{\r\n      this.setState({flag:!this.state.flag})\r\n    }\r\n    X=()=>{\r\n        this.props.X1(this.state.index)\r\n    }\r\n    Show=()=>{\r\n        if (this.state.flag == true) {\r\n          return( <div>\r\n                   {this.props.view.map((e)=>{\r\n                return( <div> \r\n                    <h2>From:{e.From} To:{e.To}</h2>\r\n                    <h2>{e.HowMuch}</h2>\r\n                    <button className='btn1' style={{backgroundColor:'red'}} onClick={this.X}>X</button>\r\n                </div>)\r\n            })}\r\n          </div>)\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='App'>\r\n                <h2>Exchange:</h2>\r\n                <label>From:  </label>\r\n                <select placeholder='type' onChange={(v)=>{this.setState({From:v.target.value})}}>\r\n                    <option>Coin Type:</option>\r\n                    <option>USD</option>\r\n                    <option>ILS</option>\r\n                    <option>EURO</option>\r\n                </select>\r\n                <label> : </label>\r\n                <input placeholder='How Much' onChange={(v)=>{this.setState({HowMuch:v.target.value})}}/><br/><br/>\r\n                <label>To:  </label>\r\n                <select placeholder='type' onChange={(v)=>{this.setState({To:v.target.value})}}>\r\n                <option>Coin Type:</option>\r\n                <option>USD</option>\r\n                <option>ILS</option>\r\n                <option>EURO</option>\r\n                </select><br/><br/>\r\n                <button style={{backgroundColor:'blue'}} className='btn1' onClick={this.Start}>Start</button><br/><br/>\r\n                {/* <Link to='/Update'><button>Update</button></Link> */}\r\n                {/* <Link to='https://www.facebook.com/'><button>Share</button></Link> */}\r\n                <button style={{backgroundColor:'blue'}} className='btn1' onClick={this.View}>View</button>\r\n                 {this.Show()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport './App.css';\nimport {HashRouter as Router, Switch, Route, Link} from 'react-router-dom'\nimport Exchange from './components/Exchange';\nimport Update from './components/Update';\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      View:[],\n      Table:[{type:'Usd',rate:3.4},{type:'Euro',rate:4.1},{type:'ILS',rate:1}]\n    }\n  }\n  Start2=(f,t,h,a)=>{\n    this.setState({View:[...this.state.View,{From:f,To:t,HowMuch:h,Answer:a}]})\n  }\n  X2=(i)=>{\n    let del=this.state.View.filter((e,index)=>(index!=i)) ;\n    this.setState({View:[...del]})\n  }\n  Upd2=(t,r)=>{\n    this.setState({Table:[...this.state.Table,{type:t,rate:r}]})\n  }\n  render() {\n    return (\n      <div>\n        <Router>\n          <div className='App2'>\n          <h3>USD:3.4 / EURO:4.1</h3>\n        <Link to='/'><button style={{backgroundColor:'green'}} className='btn1'>HomePage</button></Link>\n        </div>\n          <Switch>\n          <Route exact path='/' component={()=>{return <Exchange Start1={this.Start2} view={this.state.View} X1={this.X2}/>}}/>\n          {/* <Route exact path='/Update' component={()=>{return <Update table={this.state.Table} Upd1={this.Upd2}/>}}/> */}\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}